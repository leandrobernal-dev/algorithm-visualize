"use client";

import { CssVarsProvider, IconButton, useColorScheme } from "@mui/joy";
import DarkModeRoundedIcon from "@mui/icons-material/DarkModeRounded";
import LightModeRoundedIcon from "@mui/icons-material/LightModeRounded";

import "./globals.css";
import { Inter } from "next/font/google";

import theme from "@src/utils/theme";
import { useEffect, useState } from "react";

const inter = Inter({ subsets: ["latin"] });

export const metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};
function ColorSchemeToggle() {
    const { mode, setMode } = useColorScheme();
    const [mounted, setMounted] = useState(false);

    useEffect(() => {
        setMounted(true);
    }, []);

    // if (!mounted) {
    //     return (
    //         <IconButton size="sm" variant="plain" color="neutral" disabled />
    //     );
    // }

    // return (
    //     <IconButton
    //         id="toggle-mode"
    //         size="sm"
    //         variant="plain"
    //         color="neutral"
    //         aria-label="toggle light/dark mode"
    //         onClick={(event) => {
    //             if (mode === "light") {
    //                 setMode("dark");
    //             } else {
    //                 setMode("light");
    //             }
    //         }}
    //     >
    //         {mode === "light" ? (
    //             <DarkModeRoundedIcon />
    //         ) : (
    //             <LightModeRoundedIcon />
    //         )}
    //     </IconButton>
    // );
}
export default function RootLayout({ children }) {
    return (
        <html lang="en">
            <CssVarsProvider defaultMode="dark" theme={theme}>
                <body
                    suppressHydrationWarning={true}
                    className={`${inter.className}`}
                >
                    <ColorSchemeToggle />
                    {children}
                </body>
            </CssVarsProvider>
        </html>
    );
}
